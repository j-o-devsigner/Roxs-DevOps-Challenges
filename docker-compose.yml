name: roxs-voting-app

services:
  # Servicio de Voto (Frontend)
  vote:
    container_name: vote
    build: ./app/vote
    ports:
      - "127.0.0.1:80:80"
    env_file:
      - ./.env
      - ./app/vote/.env.local
    networks:
      - voting_app_network
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Servicio de Resultados (Web)
  result:
    container_name: result
    build: ./app/result
    ports:
      - "127.0.0.1:3000:3000"
    env_file:
      - ./.env
      - ./app/result/.env.local
    networks:
      - voting_app_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Servicio Worker (Procesador de fondo)
  worker:
    container_name: worker
    build: ./app/worker
    env_file:
      - ./.env
    networks:
      - voting_app_network
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Servicio de Redis (Cola de mensajes)
  redis:
    container_name: redis_cache
    image: redis:7.2-alpine
    networks:
      - voting_app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  # Servicio de Base de Datos PostgreSQL
  postgres:
    container_name: postgres_db
    image: postgres:16.1-alpine
    environment:
      - ./postgres.env
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - voting_app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

# Definici√≥n de la red y el volumen
networks:
  voting_app_network:
    driver: bridge

volumes:
  db-data:
    driver: local
